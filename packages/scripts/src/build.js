/**
 * @fileoverview
 * Build script for the project. Builds both `@vonsim/app` and `@vonsim/docs`
 * and saves the output to the `dist` folder.
 *
 * Also moves the 404.html generated by `@vonsim/docs` to the root of `dist`.
 */

import fs from "node:fs/promises";
import { fileURLToPath } from "node:url";

import cpy from "cpy";
import { execa } from "execa";

const rootDir = new URL("../../..", import.meta.url);
const distDir = new URL("./dist/", rootDir);

process.env.NODE_ENV = "production";

if (await fs.stat(distDir).catch(() => false)) {
  console.info("Cleaning dist directory");
  await fs.rm(distDir, { recursive: true });
}

console.info("\n\n========= Building @vonsim/app =========\n");
const appDir = new URL("./app/", rootDir);
await execa({
  cwd: appDir,
  stdout: process.stdout,
  stderr: process.stdout,
})`pnpm run build`;
await fs.rename(new URL("./dist/", appDir), distDir);

console.info("\n\n========= Building @vonsim/docs =========\n");
const docsDir = new URL("./docs/", rootDir);
await execa({
  cwd: docsDir,
  stdout: process.stdout,
  stderr: process.stdout,
})`pnpm run build`;
await cpy("docs/.vitepress/dist/**/*", "dist/", { cwd: fileURLToPath(rootDir), overwrite: false });

console.info("\n\n========= Adding redirects =========\n");
const docsRedirect = `<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <title>VonSim docs</title>
  <meta http-equiv="refresh" content="0; URL=https://vonsim.github.io/es/">
  <link rel="canonical" href="https://vonsim.github.io/es/"></link>
</head>
<body>
  <p><a href="https://vonsim.github.io/es/">VonSim docs</a></p>
</body>`;
await fs.writeFile(new URL("./docs.html", distDir), docsRedirect);

console.info("\n\nDone");
